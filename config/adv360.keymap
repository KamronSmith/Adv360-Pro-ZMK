/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

&sk { quick-release; };

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        Hml: Hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <200>;
            hold-trigger-key-positions = <7 8 9 10 11 12 13 21 22 23 24 25 26 27 38 39 40 41 42 43 44 45 54 55 56 57 58 59 69 70 71 72 73 74 75 37 38 53 68 69>;
            hold-trigger-on-release;
        };

        Hmr: Hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <200>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33 34 35 36 46 47 48 49 50 51 52 60 61 62 63 64 65 66 67>;
            hold-trigger-on-release;
        };

        Bspc: Bspc {
            compatible = "zmk,behavior-hold-tap";
            label = "BSPC";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <175>;
            flavor = "balanced";
        };

        Spc: Spc {
            compatible = "zmk,behavior-hold-tap";
            label = "SPC";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <125>;
            flavor = "balanced";
            require-prior-idle-ms = <200>;
        };

        Caps: Caps {
            compatible = "zmk,behavior-mod-morph";
            label = "CAPS";
            bindings = <&sk LSHFT>, <&caps_word>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };
    };

    macros {
        pas3: pas3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N1 &kp Q &kp A &kp Z &kp N2 &kp W &kp S &kp X &kp EXCL &kp LS(Q) &kp LS(A) &kp LS(Z) &kp AT &kp LS(W) &kp LS(S) &kp LS(X)>;
            label = "PAS3";
        };

        org: org {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp POUND &kp PLUS>;
            label = "ORG";
        };

        Nextsen: Nextsen {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp PERIOD &kp SPACE &sk LEFT_SHIFT>;
            label = "NEXTSEN";
        };

        nextcomma: nextcomma {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COMMA &kp SPACE>;
            label = "NEXTCOMMA";
        };

        shell_back: shell_back {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOT &kp DOT &kp FSLH>;
            label = "SHELL_BACK";
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&to 0              &kp N5           &kp NUMBER_4       &kp NUMBER_3  &kp NUMBER_2  &kp NUMBER_1  &none                                                                                           &to 3                  &kp N0      &kp NUMBER_6  &kp N7        &kp N8        &kp N9        &none
&kp APOS           &kp V            &kp M              &kp L         &kp C         &kp P         &kp LS(LA(LC(LG(C))))                                                                           &kp LS(LG(LA(LC(X))))  &kp B       &kp F         &kp O         &kp U         &kp Q         &kp SEMI
&kp DOUBLE_QUOTES  &Hml LEFT_ALT S  &Hml LEFT_SHIFT T  &Hml LMETA R  &Hml LCTRL D  &kp Y         &kp LS(LA(LC(LG(W))))  &kp TAB    &kp ESCAPE                 &kp LS(LA(LC(LG(A))))  &caps_word  &kp LS(LC(LG(LA(F))))  &kp PERIOD  &Hmr RCTRL N  &Hmr RMETA E  &Hmr RSHFT A  &Hmr RALT I   &kp MINUS
&none              &kp Z            &kp K              &kp J         &kp G         &kp W                                           &kp LS(LC(LG(LA(D))))      &kp LS(LG(LA(LC(B))))                                     &kp X       &kp H         &kp COMMA     &kp EXCL      &kp QUESTION  &none
&kp F5             &kp F4           &kp F3             &kp F2        &kp F1                      &Spc 1 SPACE           &kp ENTER  &kp F13                    &kp F15                &Caps       &Bspc 2 BACKSPACE                  &kp F6        &kp F7        &kp F8        &kp F9        &kp F10
            >;
        };

        layer_extend {
            bindings = <
&bootloader  &none         &none      &none         &none          &none  &none                                  &none      &none           &none      &none         &none      &none          &bootloader
&none        &none         &none      &kp K_BACK    &kp K_FORWARD  &none  &none                                  &none      &kp HOME        &kp PG_DN  &kp PG_UP     &kp END    &none          &none
&none        &kp LEFT_ALT  &kp LSHFT  &kp LEFT_GUI  &kp LCTRL      &none  &none  &none  &none      &none  &none  &none      &kp LEFT_ARROW  &kp DOWN   &kp UP_ARROW  &kp RIGHT  &kp BACKSPACE  &none
&none        &none         &none      &none         &none          &none                &none      &none                    &none           &mkp MB1   &mkp MB2      &none      &none          &none
&none        &none         &none      &none         &none                 &none  &none  &none      &none  &none  &kp ENTER                  &pas3      &none         &none      &none          &none
            >;
        };

        layer_SYMBOL {
            bindings = <
&none  &none                &none                  &none                 &none             &none            &none                                          &none  &none          &none                                &none                              &none                           &none                 &none
&none  &kp AT               &none                  &kp CARET             &kp EQUAL         &kp AMPS         &none                                          &none  &kp PERCENT    &kp LEFT_BRACE                       &kp RIGHT_BRACE                    &none                           &kp GRAVE             &none
&none  &Hml LEFT_ALT UNDER  &Hml LEFT_SHIFT COLON  &Hml LEFT_META SLASH  &Hml LCTRL MINUS  &kp ASTRK        &none      &none      &none      &none  &none  &none  &kp SEMICOLON  &Hmr RIGHT_CONTROL LEFT_PARENTHESIS  &Hmr RIGHT_META RIGHT_PARENTHESIS  &Hmr RIGHT_SHIFT DOUBLE_QUOTES  &Hmr RIGHT_ALT TILDE  &none
&none  &kp HASH             &kp PIPE               &kp DOLLAR            &kp PLUS          &kp EXCLAMATION                        &none      &none                &kp BACKSLASH  &kp LEFT_BRACKET                     &kp RIGHT_BRACKET                  &kp LESS_THAN                   &kp GREATER_THAN      &none
&none  &none                &none                  &none                 &org                               &kp SPACE  &kp ENTER  &none      &none  &none  &none                 &shell_back                          &none                              &none                           &none                 &none
            >;
        };

        layer_qwerty {
            bindings = <
&none             &kp N5            &kp N4  &kp N3  &kp N2  &kp N1  &none                                                                       &to 0              &kp N0  &kp N6  &kp N7  &kp N8     &kp N9     &kp MINUS
&kp SINGLE_QUOTE  &none             &kp Q   &kp W   &kp E   &kp R   &none                                                                       &none              &kp T   &kp Y   &kp U   &kp I      &kp O      &kp P
&kp LEFT_CONTROL  &kp LEFT_CONTROL  &kp A   &kp S   &kp D   &kp F   &none         &kp TAB    &kp ESCAPE      &kp LS(LG(LC(LA(A))))  &caps_word  &trans             &kp G   &kp H   &kp J   &kp K      &kp L      &kp RIGHT_META
&kp LSHFT         &kp LCMD          &kp Z   &kp X   &kp C   &kp V                            &trans          &kp LS(LA(LC(LG(B))))                                 &kp B   &kp N   &kp M   &kp COMMA  &kp COMMA  &kp RSHFT
&trans            &trans            &trans  &trans  &trans          &Spc 1 SPACE  &kp ENTER  &trans          &trans                 &Caps       &Bspc 2 BACKSPACE          &trans  &trans  &trans     &trans     &trans
            >;
        };
    };
};
